//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using DanmakuEngine.Core;

public class HysteriaDropHandler : DropHandler
{
	public int point;
	public int power;
	public bool life;
	public float dropRadius;

	public override void Drop (Vector3 location)
	{
		Debug.Log ("Hello");
		Vector3 pos = transform.position;
		float angle, distance;
		for(int i = 0; i < point; i++)
		{
			angle = 2 * Mathf.PI * UnityEngine.Random.value;
			distance = dropRadius * UnityEngine.Random.value;
			PickupPool.Spawn(new Vector3(pos.x + Mathf.Cos(angle) * distance, pos.y + Mathf.Sin(angle) * distance), Pickup.Type.Point).GameObject.SetActive(true);
		}
		for(int i = 0; i < power; i++)
		{
			angle = 2 * Mathf.PI * UnityEngine.Random.value;
			distance = dropRadius * UnityEngine.Random.value;
			PickupPool.Spawn(new Vector3(pos.x + Mathf.Cos(angle) * distance, pos.y + Mathf.Sin(angle) * distance), Pickup.Type.Power).GameObject.SetActive(true);
		}
		if(life)
		{
			PickupPool.Spawn(Transform.position, Pickup.Type.Life);
		}
	}
}

